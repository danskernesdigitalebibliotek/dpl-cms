diff --git a/modules/update/update.manager.inc b/modules/update/update.manager.inc
index 97333a0825..fe5ec5f02f 100644
--- a/modules/update/update.manager.inc
+++ b/modules/update/update.manager.inc
@@ -325,17 +325,14 @@ function update_manager_batch_project_get($project, $url, &$context) {
  * @see install_check_requirements()
  */
 function update_manager_local_transfers_allowed() {
-  $file_system = \Drupal::service('file_system');
-  // Compare the owner of a webserver-created temporary file to the owner of
-  // the configuration directory to determine if local transfers will be
-  // allowed.
-  $temporary_file = \Drupal::service('file_system')->tempnam('temporary://', 'update_');
-  $site_path = \Drupal::getContainer()->getParameter('site.path');
-  $local_transfers_allowed = fileowner($temporary_file) === fileowner($site_path);
-
-  // Clean up. If this fails, we can ignore it (since this is just a temporary
-  // file anyway).
-  @$file_system->unlink($temporary_file);
-
-  return $local_transfers_allowed;
+  // Patch for DPL. Normally this checks if a temporary file created is owned by
+  // the same user as `sites/<current site>`, but that's pretty simplistic and
+  // will fail in quite valid cases (for instance if the webserver has write
+  // access through group permissions). In our case, we know that uploaded
+  // modules can be moved to our `sites/default/files/modules_local` (which is
+  // symlinked from `modules/`), but we can't really fix this properly as this
+  // function doesn't know whether it's a module, theme or something else
+  // entirely that we're checking for. So rather than trying to cook up some
+  // generic solution that'll fail in some cases anyway, we just return true.
+  return TRUE;
 }
