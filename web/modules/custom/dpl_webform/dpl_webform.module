<?php

/**
 * @file
 * Primary module hooks for dpl_webform module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\Webform;

/**
 * Implements hook_ENTITY_TYPE_create() for webform.
 */
function dpl_webform_webform_create(Webform $webform): void {
  // We want to avoid saving sensitive information from users because of GDPR.
  // Therefore we disable saving of results for all new webforms.
  $webform->setSetting('results_disabled', TRUE);
  $webform->setSetting('results_disabled_ignore', TRUE);

  // We want to set a new "default_value" to the "confirmation_type" setting.
  // If we do not set this, the editors will have to manually change it when
  // creating a new webform.
  $webform->setSetting('confirmation_type', 'message');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dpl_webform_preprocess_input__submit(array &$variables): void {
  $original_classes = $variables['attributes']['class'] ?? [];

  if (in_array('webform-button--submit', $original_classes)) {
    $variables['attributes']['class'] = array_merge($original_classes, [
      'btn-primary',
      'btn-filled',
      'btn-small',
      'arrow__hover--right-small',
      'dpl-button',
    ]);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function dpl_webform_theme_suggestions_form_element_alter(array &$suggestions, array $variables): void {
  if (isset($variables['element']['#webform_element'])) {
    $suggestions[] = 'form_element__webform';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dpl_webform_form_webform_settings_form_alter(array &$form, FormStateInterface &$form_state, string $form_id): void {
  $current_user = \Drupal::currentUser();
  $access = $current_user->hasPermission('administer advanced webform general settings');

  // We restrict access to the following settings:
  $form['general_settings']['archive']['#access'] = $access;
  $form['general_settings']['results_disabled']['#access'] = $access;
  $form['general_settings']['results_disabled_error']['#access'] = $access;
  $form['general_settings']['results_disabled_ignore']['#access'] = $access;
  $form['general_settings']['categories']['#access'] = $access;
  $form['page_settings']['#access'] = $access;
  $form['ajax_settings']['#access'] = $access;
  $form['third_party_settings']['#access'] = $access;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dpl_webform_form_webform_settings_confirmation_form_alter(array &$form, FormStateInterface &$form_state, string $form_id): void {
  $current_user = \Drupal::currentUser();
  $access = $current_user->hasPermission('administer advanced webform confirmation settings');

  // We restrict access to the following settings:
  $form['confirmation_type']['#access'] = $access;
  $form['confirmation_url']['#access'] = $access;
  $form['confirmation_settings']['confirmation_title']['#access'] = $access;
  $form['confirmation_attributes_container']['#access'] = $access;
  $form['back']['#access'] = $access;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dpl_webform_form_webform_ui_element_form_alter(array &$form, FormStateInterface &$form_state, string $form_id): void {
  $current_user = \Drupal::currentUser();
  $access = $current_user->hasPermission('administer advanced webform element settings');

  // We restrict access to the following settings:
  $form['properties']['conditional_logic']['#access'] = $access;
  $form['properties']['display']['#access'] = $access;
  $form['properties']['admin']['#access'] = $access;
  $form['properties']['access']['#access'] = $access;
  $form['properties']['multiple']['#access'] = $access;
  $form['properties']['default']['#access'] = $access;
  $form['properties']['wrapper_attributes']['#access'] = $access;
  $form['properties']['element_attributes']['#access'] = $access;
  $form['properties']['label_attributes']['#access'] = $access;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dpl_webform_form_webform_handler_form_alter(array &$form, FormStateInterface &$form_state, string $form_id): void {

  // We remove access to 'from' settings and set default values
  // that matches what Azure Communication Services (ACS) expects.
  $form['settings']['from']['#access'] = FALSE;
  $form['settings']['from']['from_mail']['from_mail']['#default_value'] = '[site:mail]';
  $form['settings']['from']['from_name']['from_name']['#default_value'] = '';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dpl_webform_form_webform_edit_form_alter(array &$form, FormStateInterface &$form_state, string $form_id): void {

  /** @var \Drupal\webform\WebformInterface $webform */
  $webform = \Drupal::routeMatch()->getParameter('webform');

  // Editors with their default language set to danish, kept getting
  // a warning message when editting webforms. The warning said that
  // they were editting the original english version of the webform.
  // We do not care about the warning, since that is the expected
  // behaviour. To avoid showing the warning, we simply set the
  // langcode to danish on the webform edit forms.
  $webform->set('langcode', 'da');
}
