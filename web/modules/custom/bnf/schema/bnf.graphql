"""Complex address data."""
type Address {
  langcode: String
  country: AddressCountry
  givenName: String
  additionalName: String
  familyName: String
  organization: String
  addressLine1: String
  addressLine2: String
  postalCode: String
  sortingCode: String
  dependentLocality: String
  locality: String
  administrativeArea: String
}

"""Kommune."""
type AddressCountry {
  """The name of the country."""
  name: String

  """The code of the country."""
  code: String
}

type AdgangsplatformenLibraryToken {
  token: String
  expire: DateTime
}

type AdgangsplatformenTokens {
  user: AdgangsplatformenUserToken
  library: AdgangsplatformenLibraryToken
}

type AdgangsplatformenUserToken {
  token: String
  expire: Int
}

"""En CQL søgestreng."""
type CQLSearch {
  """CQL søgestrengen."""
  value: String
}

"""A color field."""
type Color {
  """The color value in #HEX format."""
  color: String

  """The opacity value."""
  opacity: Float
}

"""A Date range has a start and an end."""
type DateRange {
  """The start of the date range."""
  start: DateTime

  """The end of the date range."""
  end: DateTime
}

"""A DateTime object."""
type DateTime {
  """
  Type represents date and time as number of milliseconds from start of the UNIX epoch.
  """
  timestamp: Timestamp!

  """A field whose value exists in the standard IANA Time Zone Database."""
  timezone: TimeZone!

  """A string that will have a value of format ±hh:mm"""
  offset: UtcOffset!

  """RFC 3339 compliant time string."""
  time: Time!
}

"""DPL Configuration."""
type DplConfiguration {
  unilogin: UniloginConfiguration
}

type DplTokens {
  adgangsplatformen: AdgangsplatformenTokens
}

"""An email address."""
scalar Email

"""A file object to represent an managed file."""
type File {
  """Filens navn."""
  name: String

  """The URL of the file."""
  url: String!

  """Filens størrelse i bytes."""
  size: Int!

  """Filens mime-type."""
  mime: String

  """The description of the file."""
  description: String
}

type GoConfiguration {
  unilogin: UniloginConfiguration
  loginUrls: GoLoginUrls
  logoutUrls: GoLogoutUrls
}

type GoLoginUrls {
  adgangsplatformen: String
}

type GoLogoutUrls {
  adgangsplatformen: String
}

"""
An HTML string

Content of this type is deemed safe by the server for raw output given the
origin and the context of its usage. The HTML can still contain scripts or style
tags where the creating user had permission to input these.
"""
scalar Html

"""A image object to represent an managed file."""
type Image {
  """The URL of the image."""
  url: String!

  """The width of the image."""
  width: Int!

  """The height of the image."""
  height: Int!

  """The alt text of the image."""
  alt: String

  """The title text of the image."""
  title: String

  """The size of the image in bytes."""
  size: Int!

  """The mime type of the image."""
  mime: String
}

type ImportResponse {
  status: ImportStatus!
  message: String!
}

enum ImportStatus {
  success
  failure
  duplicate
}

"""Generic input for key-value pairs."""
input KeyValueInput {
  key: String!
  value: String
}

"""A language definition provided by the CMS."""
type Language {
  """Sprogkoden."""
  id: ID

  """Sprogets navn."""
  name: String

  """The language direction."""
  direction: String
}

"""A link."""
type Link {
  """Linkets titel"""
  title: String

  """Linkets URL"""
  url: String

  """Whether the link is internal to this website."""
  internal: Boolean!
}

"""Entity type media."""
type MediaAudio implements MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Audio file"""
  mediaAudioFile: File!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""Entity type media."""
type MediaDocument implements MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Fil"""
  mediaFile: File!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""Entity type media."""
type MediaImage implements MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  Bruges til fotokreditering og info om copyright. Vises som regel ved siden af billedet.
  """
  byline: String

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """
  Du kan indstille et fokuspunkt ved at klikke på forhåndsvisningen af
  billedet og flytte det hvide mål.<br /><br />Ved at indstille et fokuspunkt
  fortæller du systemet, hvilken del af billedet der skal være i fokus, når
  det beskæres.<br /><br />Brug funktionen "forhåndsvisning" til at se,
  hvordan dit billede vil blive beskåret på tværs af billedstil.
  """
  mediaImage: Image!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""Entity type media."""
interface MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""Entity type media."""
union MediaUnion = MediaAudio | MediaDocument | MediaImage | MediaVideo | MediaVideotool

"""Entity type media."""
type MediaVideo implements MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """URL til video"""
  mediaOembedVideo: String!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""Entity type media."""
type MediaVideotool implements MediaInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time the media item was last edited."""
  changed: DateTime!

  """The time the media item was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """VideoTool URL"""
  mediaVideotool: String!

  """Navn"""
  name: String!

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!
}

"""The schema's entry-point for mutations."""
type Mutation {
  """Placeholder for mutation extension."""
  _: Boolean!
  import(uuid: String!, contentType: String!, callbackUrl: String!): ImportResponse!
}

type NewContentResponse {
  uuids: [String!]!
  errors: [Violation]
}

"""Brug artikler til nyhedspræget indhold med en begrænset levetid."""
type NodeArticle implements NodeInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Bibliotek"""
  branch: NodeUnion

  """
  Oplys en canonical URL hvis indholdet i artiklen er kopieret fra en anden
  hjemmeside (fx kopieret fra et andet biblioteks hjemmeside). Dette hjælper
  med at signalere til søgemaskiner at kilden til indholdet er den
  specificerede side, og sikrer at den originale kilde krediteres.
  """
  canonicalUrl: Link

  """Kategorier"""
  categories: TermUnion

  """Tidspunktet hvor indholdselementet sidst blev redigeret."""
  changed: DateTime!

  """The date and time that the content was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Overskriv forfatter"""
  overrideAuthor: String

  """Paragraphs"""
  paragraphs: [ParagraphUnion!]

  """Alternativ URL"""
  path: String

  """Forfremmet til forside"""
  promote: Boolean!

  """Udgivelsesdato"""
  publicationDate: DateTime!

  """
  Som standard er forfatteren sat til den Drupal-bruger, der ejer indholdet.<br
  /><br />Hvis du ønsker at tilsidesætte dette med din egen tekst, kan du
  """
  showOverrideAuthor: Boolean

  """Publiceret"""
  status: Boolean!

  """Klæbrig"""
  sticky: Boolean!

  """Manchet"""
  subtitle: String

  """Tags"""
  tags: [TermUnion!]

  """
  Teaserfelterne bruges til cards som blikfang for indholdet. Hvis der ikke er
  valgt et teaserbillede, vil teksten vises i stedet.
  """
  teaserImage: MediaUnion

  """Teasertekst"""
  teaserText: String

  """Titel"""
  title: String!
  url: String!
  bundle: String!
}

"""
Use Go articles for news-worthy content, that does not get updated regularly.
"""
type NodeGoArticle implements NodeInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Tidspunktet hvor indholdselementet sidst blev redigeret."""
  changed: DateTime!

  """The date and time that the content was created."""
  created: DateTime!

  """Image"""
  goArticleImage: MediaUnion

  """Sprog"""
  langcode: Language!

  """Override author"""
  overrideAuthor: String

  """Paragraphs"""
  paragraphs: [ParagraphUnion!]

  """Alternativ URL"""
  path: String

  """Forfremmet til forside"""
  promote: Boolean!

  """Publication date"""
  publicationDate: DateTime!

  """
  By default, the author is set to the Drupal user that owns the content.<br
  /><br />If you want to override this, with a manual text, you can check this.
  """
  showOverrideAuthor: Boolean

  """Publiceret"""
  status: Boolean!

  """Klæbrig"""
  sticky: Boolean!

  """Subtitle"""
  subtitle: String

  """
  The teaser fields are used for the card of display.<br />If no image has been
  selected, the text will be shown instead:<br /><br /><img
  src="/themes/custom/novel/images/teaser-text-image.jpg" /><br /><br /><hr/>
  """
  teaserImage: MediaUnion!

  """Teaser text"""
  teaserText: String

  """Titel"""
  title: String!
  url: String!
  bundle: String!
}

"""
GO category pages will be used for creating a "landingpage" for specific categories. 
When creating and publishing a new category page, the category will automatically be added to the category menu.
"""
type NodeGoCategory implements NodeInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  The category image will be shown in the category menu as part of this category's menu element.
  """
  categoryMenuImage: MediaUnion!

  """
  The category sound will be able to be played in the category menu as part of this category's menu element.
  """
  categoryMenuSound: MediaUnion

  """
  The category title will be shown in the category menu as part of this category's menu element.
  """
  categoryMenuTitle: String!

  """Tidspunktet hvor indholdselementet sidst blev redigeret."""
  changed: DateTime!

  """The date and time that the content was created."""
  created: DateTime!

  """Category menu color"""
  goColor: String

  """Sprog"""
  langcode: Language!

  """Paragraphs"""
  paragraphs: [ParagraphUnion!]

  """Alternativ URL"""
  path: String

  """Forfremmet til forside"""
  promote: Boolean!

  """Publication date"""
  publicationDate: DateTime!

  """Publiceret"""
  status: Boolean!

  """Klæbrig"""
  sticky: Boolean!

  """Titel"""
  title: String!
  url: String!
  bundle: String!
}

"""
GO-sider bliver brugt til forskellige typer for indhold, som ikke tilhører
hverken en artikel-side eller en kategori-side. Fx forsiden, informationssider
"""
type NodeGoPage implements NodeInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Tidspunktet hvor indholdselementet sidst blev redigeret."""
  changed: DateTime!

  """The date and time that the content was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Paragraffer"""
  paragraphs: [ParagraphUnion!]

  """Alternativ URL"""
  path: String

  """Forfremmet til forside"""
  promote: Boolean!

  """Publikationsdato"""
  publicationDate: DateTime!

  """Publiceret"""
  status: Boolean!

  """Klæbrig"""
  sticky: Boolean!

  """Titel"""
  title: String!
  url: String!
  bundle: String!
}

"""Entity type node."""
interface NodeInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Tidspunktet hvor indholdselementet sidst blev redigeret."""
  changed: DateTime!

  """The date and time that the content was created."""
  created: DateTime!

  """Sprog"""
  langcode: Language!

  """Alternativ URL"""
  path: String

  """Forfremmet til forside"""
  promote: Boolean!

  """Publiceret"""
  status: Boolean!

  """Klæbrig"""
  sticky: Boolean!

  """Titel"""
  title: String!
  url: String!
  bundle: String!
}

"""Entity type node."""
union NodeUnion = NodeArticle | NodeGoArticle | NodeGoCategory | NodeGoPage

"""Entity type paragraph."""
type ParagraphAccordion implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Accordion beskrivelse"""
  accordionDescription: Text

  """Accordion titel"""
  accordionTitle: Text!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
Bannerets funktion er at linke til internt indhold, og kan bruges med eller uden baggrundsbillede.
"""
type ParagraphBanner implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Bannerbeskrivelse"""
  bannerDescription: String

  """Bannerbillede"""
  bannerImage: MediaUnion

  """Bannerlink"""
  bannerLink: Link!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """Understreget titel"""
  underlinedTitle: Text
}

"""
Vis automatisk alt indhold, som refererer til dit valgte brødkrumme element.
"""
type ParagraphBreadcrumbChildren implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""En regel til at vælge en matchende kampagne"""
type ParagraphCampaignRule implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
type ParagraphCardGridAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Hvis der ikke vælges noget, vil ALT automatisk blive valgt."""
  filterBranches: [NodeUnion!]

  """Filter efter kategorier"""
  filterCategories: [TermUnion!]

  """Tilstandstype"""
  filterCondType: String!

  """Hvis intet er valgt, vil alt blive valgt."""
  filterContentTypes: [String!]

  """Filter efter tags"""
  filterTags: [TermUnion!]

  """The paragraphs entity language code."""
  langcode: Language!

  """Flere links"""
  moreLink: Link

  """Publiceret"""
  status: Boolean!

  """Titel"""
  title: String
}

"""Entity type paragraph."""
type ParagraphCardGridManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Indhold"""
  gridContent: [ParagraphCardGridManualGridContentUnion!]

  """The paragraphs entity language code."""
  langcode: Language!

  """Flere links"""
  moreLink: Link

  """Publiceret"""
  status: Boolean!

  """Overskrift"""
  title: String
}

"""Indhold"""
union ParagraphCardGridManualGridContentUnion = NodeArticle | NodeGoArticle | NodeGoCategory | NodeGoPage

"""Entity type paragraph."""
type ParagraphContentSlider implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Indhold"""
  contentReferences: [ParagraphContentSliderContentReferencesUnion!]

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """forældet"""
  title: String

  """Titel"""
  underlinedTitle: Text
}

"""Entity type paragraph."""
type ParagraphContentSliderAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Hvis der ikke vælges noget, vil ALT automatisk blive valgt."""
  filterBranches: [NodeUnion!]

  """Filtrer efter kategori"""
  filterCategories: [TermUnion!]

  """Tilstandstype"""
  filterCondType: String!

  """Hvis intet er valgt, vil alt blive valgt."""
  filterContentTypes: [String!]

  """Filtrer efter tags"""
  filterTags: [TermUnion!]

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """Titel (forældet)"""
  title: String

  """Titel"""
  underlinedTitle: Text
}

"""Indhold"""
union ParagraphContentSliderContentReferencesUnion = NodeArticle | NodeGoArticle | NodeGoCategory | NodeGoPage

"""En kombination af navn på billetkategori og pris på et arrangement. """
type ParagraphEventTicketCategory implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
Link med ikoner. Designet til jpg, jpeg, png, pdf, mp3, mov, mp4, og mpeg filer
"""
type ParagraphFiles implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Filer"""
  files: [MediaUnion!]

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
Denne paragraph viser en liste af arrangementer filtreret på kategori, tags og filialer.
"""
type ParagraphFilteredEventList implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Hvis der ikke vælges noget, vil ALT automatisk blive valgt."""
  filterBranches: [NodeUnion!]

  """Tilføj en kategori, du vil inkludere"""
  filterCategories: [TermUnion!]

  """Tilstandstype"""
  filterCondType: String!

  """Tilføj et tag, du vil inkludere"""
  filterTags: [TermUnion!]

  """The paragraphs entity language code."""
  langcode: Language!

  """
  Vælg antallet af arrangementer, du ønsker at vise. <br /><br />Hvis antallet
  vist er mindre end det, du har angivet her, skyldes det sandsynligvis, at der
  ikke er nok resultater baseret på dine valgte filtre.
  """
  maxItemAmount: String!

  """Publiceret"""
  status: Boolean!

  """Titel"""
  title: String
}

"""
This paragraph is used for displaying 1-2 images on GO content types such as GO Article, GO Page and GO Category.
"""
type ParagraphGoImages implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Images"""
  goImages: [MediaUnion!]!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
This link paragraph is used for links in GO, as it requires additional fields
such as aria-label and ‘Open link in new window.’ These fields could not be
exported in GraphQL when using a Linkit widget.
"""
type ParagraphGoLink implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Aria Label"""
  ariaLabel: String

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Link"""
  link: Link!

  """Publiceret"""
  status: Boolean!

  """Open link in a new window"""
  targetBlank: Boolean
}

"""Entity type paragraph."""
type ParagraphGoLinkbox implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Color"""
  goColor: String

  """Description"""
  goDescription: String!

  """Image"""
  goImage: MediaUnion

  """Link"""
  goLinkParagraph: ParagraphUnion!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """Title"""
  title: String!
}

"""
This paragraph is used for displaying a range of materials based on a CQL search string. 
"""
type ParagraphGoMaterialSliderAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  This field is for inserting a CQL string based on a search. <br /><br />Please
  be aware, that it is necessary to copy the exact CQL string, including the
  quotations. i.e: ( 'harry potter')<br /><br />A valid CQL search string can be
  generated, by performing a query through the advanced search, and copying the
  CQL string from there.
  """
  cqlSearch: CQLSearch!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Amount of materials"""
  sliderAmountOfMaterials: Int!

  """Publiceret"""
  status: Boolean!

  """Title"""
  title: String!
}

"""
This paragraph is used for displaying a range of materials. The materials can be
chosen by manually searching for available materials.
"""
type ParagraphGoMaterialSliderManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """
  Here you can choose which materials to display. If you need to link to a
  specific type, select it from the dropdown and the system will display that,
  if it is available.<br />Example work ID: work-of:870970-basis:136336282
  """
  materialSliderWorkIds: [WorkId!]!

  """Publiceret"""
  status: Boolean!

  """Title"""
  title: String!
}

"""
This GO-specific text field uses CKEditor 5 with the GO Text Body format,
supporting structured content with headings (H2, H3), bold, italic, underline,
lists, and advanced link features like target attributes and Linkit integration.
"""
type ParagraphGoTextBody implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Body"""
  body: Text!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Angiv URL-en for den video, der skal vises"""
type ParagraphGoVideo implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Indlagt video"""
  embedVideo: MediaUnion!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """Titl"""
  title: String!
}

"""
This paragraph is used for displaying a VideoTool video and display a set of
related books. The related books is automatically chosen based on a CQL search
"""
type ParagraphGoVideoBundleAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  This field is for inserting a CQL string based on a search. <br /><br />Please
  be aware, that it is necessary to copy the exact CQL string, including the
  quotations. i.e: ( 'harry potter')<br /><br />A valid CQL search string can be
  generated, by performing a query through the advanced search, and copying the
  CQL string from there.
  """
  cqlSearch: CQLSearch!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Embed video"""
  embedVideo: MediaUnion!

  """Title"""
  goVideoTitle: String!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """The amount of related materials that should be shown."""
  videoAmountOfMaterials: Int!
}

"""
This paragraph is used for displaying a VideoTool video and display a set of
related or recommended materials. The materials can be selected manually.
"""
type ParagraphGoVideoBundleManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Embed video"""
  embedVideo: MediaUnion!

  """Title"""
  goVideoTitle: String!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """
  Here you can choose which materials to display. If you need to link to a
  specific type, select it from the dropdown and the system will display that,
  if it is available.<br />Example work ID: work-of:870970-basis:136336282
  """
  videoBundleWorkIds: [WorkId!]
}

"""
En Hero til placering øverst på forsiden med et billede, informativ tekst, kategori og et link til fremhævet indhold.
"""
type ParagraphHero implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Hero kategori"""
  heroCategories: TermUnion

  """Hero indholdstype"""
  heroContentType: String

  """Hero dato"""
  heroDate: DateTime

  """Hero beskrivelse"""
  heroDescription: Text

  """Hero billede"""
  heroImage: MediaUnion

  """Hero link"""
  heroLink: Link

  """Overskrift"""
  heroTitle: String!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
interface ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Giver besøgende på sitet mulighed for at vælge foretrukket sprog"""
type ParagraphLanguageSelector implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
Links med ikoner. Designet til interne/eksterne links og links til søgeresultater ␣.
"""
type ParagraphLinks implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Link"""
  link: [Link!]!

  """Publiceret"""
  status: Boolean!
}

"""
Dette afsnit vil vise en liste over arrangementer, der er manuelt valgt.
"""
type ParagraphManualEventList implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Arrangementer"""
  events: [UnsupportedType!]

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!

  """Titel"""
  title: String
}

"""En visning af fremhævede værker, baseret på en CQL søgestreng."""
type ParagraphMaterialGridAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  Bestemmer mængden af materialer, der vil blive vist, baseret på
  CQL-strengen. <br /><br />Obs: Hvis for eksempel en CQL-streng har 11
  resultater, og en redaktør vælger 12. Listen vil vise 8 i stedet for 11, da
  gitteret skal kunne øges med 4.
  """
  amountOfMaterials: Int!

  """
  Dette felt er til indsættelse af en CQL-streng baseret på en søgning. <br
  /><br />Vær opmærksom på, at det er nødvendigt at kopiere den nøjagtige
  CQL-streng, inklusive anførselstegnene. dvs: ('harry potter')<br /><br />En
  gyldig CQL-søgestreng kan genereres ved at udføre en forespørgsel gennem
  den avancerede søgning og kopiere CQL-strengen derfra.
  """
  cqlSearch: CQLSearch!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """
  Dette er en valgfri beskrivelsestekst, der kan ledsage materiale grid'et. Lad
  feltet være tomt, hvis du ikke ønsker en beskrivelse.
  """
  materialGridDescription: String

  """
  Titel på materialekomponenten. Efterlad dette felt blankt, hvis du ikke vil give den en overskrift.
  """
  materialGridTitle: String

  """Publiceret"""
  status: Boolean!
}

"""
A grid representation of recommended materials, based on a link search string. 
"""
type ParagraphMaterialGridLinkAutomatic implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """
  Determines the amount of materials that will be shown, based on the CQL
  string. <br /><br />Obs: If for example a CQL string has 11 results, and an
  editor chooses 12. The list will display 8 instead of 11, since the grid
  should be able to increment by 4.
  """
  amountOfMaterials: Int!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """
  This is the optional description for the material grid. <br />Leave blank if you do not want a description.
  """
  materialGridDescription: String

  """
  This field is for inserting a link string based on a search, e.g.:
  /><br />Please be aware that it is necessary to copy the exact link string.<br
  /><br />A valid link search string can be generated, by performing a query
  through the advanced search and copying the link string from there.
  """
  materialGridLink: String!

  """
  The title for the material grid. Leave this blank if you do not want a title. 
  """
  materialGridTitle: String

  """Publiceret"""
  status: Boolean!
}

"""En komponent som viser en liste af manuelt udvalgte værker."""
type ParagraphMaterialGridManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """
  Dette er en valgfri beskrivelsestekst, der kan ledsage materiale grid'et. Lad
  feltet være tomt, hvis du ikke ønsker en beskrivelse.
  """
  materialGridDescription: String

  """
  Titel på materialekomponenten. Efterlad dette felt blankt, hvis du ikke vil give den en overskrift.
  """
  materialGridTitle: String

  """
  Gitteret vil kun vise materialer i intervaller af 4. <br /><br />Eksempel
  arbejds ID: work-of:870970-basis:136336282.<br /><br />Hvis du skal linke til
  en specifik type, vælg den fra dropdown-menuen og systemet vil vise den, hvis
  den er tilgængelig.
  """
  materialGridWorkIds: [WorkId!]

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
type ParagraphMedias implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Billeder"""
  medias: [MediaUnion!]!

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
type ParagraphNavGridManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
type ParagraphNavSpotsManual implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
This is a paragraph for displaying the opening hours for the branch it is applied to. 

Opening hours are created under the settings of a branch. 
"""
type ParagraphOpeningHours implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Denne paragraph bruges til at anbefale et enkelt materiale."""
type ParagraphRecommendation implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """
  Dette bestemmer om, et billede skal positioneres til venstre eller højre. <br
  />Hvis den ikke er slået til (standardadfærd), placeres billedet til
  venstre, hvis den er slået til, placeres billedet til højre.␣
  """
  imagePositionRight: Boolean

  """The paragraphs entity language code."""
  langcode: Language!

  """
  Dette er beskrivelsen af det anbefalede materiale. Hvis du tilføjer en
  beskrivelsestekst, vil titlen på materialet ikke blive autoudfyldt.
  """
  recommendationDescription: String

  """
  Titlen på det anbefalede materiale. Hvis du tilføjer en titel, vil
  beskrivelsesteksten af materialet ikke blive autoudfyldt.
  """
  recommendationTitle: Text

  """
  Dette er det arbejds-ID, der bruges til at hente materialeoplysningerne.
  Eksempel: work-of:870970-basis:136336282.<br />I øjeblikket hentes dette ved
  at udføre en søgning efter et materiale manuelt og kopiere denne værdi fra
  URL'en.<br />Hvis du har brug for at linke til en bestemt type, skal du vælge
  den fra rullemenuen, og systemet vil vise den, hvis den er tilgængelig.
  """
  recommendationWorkId: WorkId

  """Publiceret"""
  status: Boolean!
}

"""Denne paragraph viser links uden ikoner."""
type ParagraphSimpleLinks implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Link"""
  link: [Link!]!

  """Publiceret"""
  status: Boolean!
}

"""En basal, formateret brødtekst"""
type ParagraphTextBody implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Brødtekst"""
  body: Text

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Entity type paragraph."""
union ParagraphUnion = ParagraphAccordion | ParagraphBanner | ParagraphBreadcrumbChildren | ParagraphCampaignRule | ParagraphCardGridAutomatic | ParagraphCardGridManual | ParagraphContentSlider | ParagraphContentSliderAutomatic | ParagraphEventTicketCategory | ParagraphFiles | ParagraphFilteredEventList | ParagraphGoImages | ParagraphGoLink | ParagraphGoLinkbox | ParagraphGoMaterialSliderAutomatic | ParagraphGoMaterialSliderManual | ParagraphGoTextBody | ParagraphGoVideo | ParagraphGoVideoBundleAutomatic | ParagraphGoVideoBundleManual | ParagraphHero | ParagraphLanguageSelector | ParagraphLinks | ParagraphManualEventList | ParagraphMaterialGridAutomatic | ParagraphMaterialGridLinkAutomatic | ParagraphMaterialGridManual | ParagraphMedias | ParagraphNavGridManual | ParagraphNavSpotsManual | ParagraphOpeningHours | ParagraphRecommendation | ParagraphSimpleLinks | ParagraphTextBody | ParagraphUserRegistrationItem | ParagraphUserRegistrationLinklist | ParagraphUserRegistrationSection | ParagraphVideo | ParagraphWebform

"""
"Brugerregistreringselement" anvendes til at vise relevant information om brugerregistreringsprocessen.
"""
type ParagraphUserRegistrationItem implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
Denne paragraph bestemmer placeringen af genveje til
"Brugeregistreingsparagraphs". Paragraphen tillader redaktører at specificere,
om disse genveje skal vises.
"""
type ParagraphUserRegistrationLinklist implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""
"Brugerregistreringsparagraph" bruges til at vise "Brugerregistreringselementer".
"""
type ParagraphUserRegistrationSection implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Indtast URL'en til den video, du vil indlejre."""
type ParagraphVideo implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """Indlejr video"""
  embedVideo: MediaUnion!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""Paragraph brugt til indlejring af en webformular."""
type ParagraphWebform implements ParagraphInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """The time that the Paragraph was created."""
  created: DateTime!

  """The paragraphs entity language code."""
  langcode: Language!

  """Publiceret"""
  status: Boolean!
}

"""A field whose value conforms to the standard E.164"""
scalar PhoneNumber

"""The schema's entry-point for queries."""
type Query {
  newContent(uuid: String!, since: Time!): NewContentResponse!
  goConfiguration: GoConfiguration
  dplTokens: DplTokens

  """Load a Node entity by id."""
  node(
    """The id of the Node to load."""
    id: ID!

    """Optionally set the response language. Eg en, ja, fr."""
    langcode: String

    """
    Optionally set the revision of the entity. Eg current, latest, or an ID.
    """
    revision: ID
  ): NodeUnion

  """DPL Configuration"""
  dplConfiguration: DplConfiguration

  """Schema information."""
  info: SchemaInformation!

  """Load a Route by path."""
  route(
    """Internal path to load. Eg /about"""
    path: String!

    """
    Optionally set the revision of the entity. Eg current, latest, or an ID.
    """
    revision: ID

    """
    Optionally set the response language. Eg en, ja, fr. Setting this langcode
    will change the current language of the entire response.
    """
    langcode: String
  ): RouteUnion
}

"""Routes represent incoming requests that resolve to content."""
interface Route {
  """URL of this route."""
  url: String!

  """Whether this route is internal or external."""
  internal: Boolean!
}

"""A list of possible entities that can be returned by URL."""
union RouteEntityUnion = NodeGoArticle | NodeGoCategory | NodeGoPage

"""Route outside of this website."""
type RouteExternal implements Route {
  """URL of this route."""
  url: String!

  """Whether this route is internal or external."""
  internal: Boolean!
}

"""Route within this website."""
type RouteInternal implements Route {
  """URL of this route."""
  url: String!

  """Whether this route is internal or external."""
  internal: Boolean!

  """Breadcrumb links for this route."""
  breadcrumbs: [Link!]

  """Content assigned to this route."""
  entity: RouteEntityUnion
}

"""Redirect to another URL with status."""
type RouteRedirect implements Route {
  """URL of this route."""
  url: String!

  """Whether this route is internal or external."""
  internal: Boolean!

  """Suggested status for redirect. Eg 301."""
  status: Int!

  """Utility prop. Always true for redirects."""
  redirect: Boolean!
}

"""Route types that can exist in the system."""
union RouteUnion = RouteInternal | RouteExternal | RouteRedirect

"""Schema information provided by the system."""
type SchemaInformation {
  """The schema description."""
  description: String

  """The internal path to the front page."""
  home: String

  """The site name."""
  name: String
  url: String!

  """The schema version."""
  version: String

  """List of languages available."""
  languages: [Language!]!
}

"""Sort direction."""
enum SortDirection {
  """Stigende"""
  ASC

  """Faldende"""
  DESC
}

"""The schema's entry-point for subscriptions."""
type Subscription {
  """Placeholder for subscription extension."""
  _: Boolean!
}

"""Entity type taxonomy_term."""
type TermBreadcrumbStructure implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """
  Titlen, der vises over listen af refereret indhold. Vil ikke blive vist, hvis der ikke vises nogen børn.
  """
  childrenTitle: String

  """Indhold der linkes til"""
  content: NodeUnion!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """
  Vis en automatisk liste med indhold, som refererer til dette brødkrumme element, på denne side.
  """
  showChildren: Boolean

  """
  Sæt hak her, hvis børnebrødkrummen skal udfoldes med eventuelle undertitel
  """
  showChildrenSubtitles: Boolean

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""Entity type taxonomy_term."""
type TermCategories implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""Entity type taxonomy_term."""
interface TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""
Kategorier af åbningstider, f.eks. "Åbent" eller "Telefontid"
"""
type TermOpeningHoursCategories implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""Screens to display content on"""
type TermScreenName implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""Entity type taxonomy_term."""
type TermTags implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""Entity type taxonomy_term."""
union TermUnion = TermBreadcrumbStructure | TermCategories | TermOpeningHoursCategories | TermScreenName | TermTags | TermWebformEmailCategories

"""
List of email categories used for sending webform submissions. Each category is associated with an email address.
"""
type TermWebformEmailCategories implements TermInterface {
  """The Universally Unique IDentifier (UUID)."""
  id: ID!

  """Datoen hvor termen senest blev redigeret."""
  changed: DateTime!

  """Beskrivelse"""
  description: Text!

  """Tilføj den e-mail, som henvendelser i denne kategori skal sendes til."""
  email: Email!

  """Term sprogkode."""
  langcode: Language!

  """Navn"""
  name: String!

  """Denne terms overordnede termer."""
  parent: TermUnion

  """Alternativ URL"""
  path: String

  """Publiceret"""
  status: Boolean!

  """Vægten af denne term i forhold til andre termer."""
  weight: Int!
}

"""A processed text format defined by the CMS."""
type Text {
  """The raw text value."""
  value: String

  """The processed text value."""
  processed: Html

  """The text format used to process the text value."""
  format: String
}

"""A processed text format with summary defined by the CMS."""
type TextSummary {
  """The raw text value."""
  value: String

  """The processed text value."""
  processed: Html

  """The text format used to process the text value."""
  format: String

  """The processed text summary."""
  summary: Html
}

"""RFC 3339 compliant time string."""
scalar Time

"""A field whose value exists in the standard IANA Time Zone Database."""
scalar TimeZone

"""
Type represents date and time as number of milliseconds from start of the UNIX epoch.
"""
scalar Timestamp

"""Available translations for content."""
type Translation {
  """The title of the translation."""
  title: String

  """The language of the translation."""
  langcode: Language!

  """The path to the translated content."""
  path: String
}

"""List of DPL-Go Unilogin configuration."""
type UniloginConfiguration {
  unilogin_api_url: String
  unilogin_api_wellknown_url: String
  unilogin_api_client_id: String
  unilogin_api_client_secret: String
}

"""
Unsupported entity or field type in the schema.
This entity may not have been enabled in the schema yet and is being referenced via entity reference.
"""
type UnsupportedType {
  """Unsupported type, always TRUE."""
  unsupported: Boolean
}

"""
Untyped structured data. Eg JSON, configuration, settings, attributes.
"""
scalar UntypedStructuredData

"""A string that will have a value of format ±hh:mm"""
scalar UtcOffset

scalar Violation

"""Et WorkID-felt."""
type WorkId {
  """The WorkID value"""
  work_id: String

  """Materialetype (fx bog, film, lydbog)"""
  material_type: String
}
