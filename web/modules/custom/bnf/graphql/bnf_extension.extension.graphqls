extend interface NodeInterface {
  url: String!
}

extend type MediaVideo {
  thumbnail: String!
}

extend type MediaVideotool {
  thumbnail: String!
}

# Ideally, we wouldn't want to manually create each content type here, but
# there is no way around that, with how GraphQL works with interfaces.
# If a new content type is added, a warning will show up in the GraphQL explorer
# that looks like:
# "Interface field NodeInterface.xxx expected but NodeZZZ does not provide it.
extend type NodeArticle {
  url: String!
}

extend type NodePage {
  url: String!
}

extend type NodeGoArticle {
  url: String!
}

extend type NodeGoCategory {
  url: String!
}

extend type NodeGoPage {
  url: String!
}

# Expand link fields with the UUID of the referenced content, if it's
# an internal link.
extend type Link {
  id: String
}
