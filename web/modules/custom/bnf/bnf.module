<?php

use Drupal\bnf\BnfStateEnum;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\node\NodeInterface;

/**
 * Implements hook_entity_base_field_info().
 *
 * Creating our custom programmatic fields.
 *
 * @return \Drupal\Core\Field\FieldDefinitionInterface[]
 *   The field definitions.
 */
function bnf_entity_base_field_info(EntityTypeInterface $entity_type): array {
  $fields = [];

  // Create new fields for node bundle.
  if ($entity_type->id() === 'node') {
    $fields[BnfStateEnum::FIELD_NAME] = BaseFieldDefinition::create('enum_integer')
      ->setName(BnfStateEnum::FIELD_NAME)
      ->setLabel(t('BNF State', [], ['context' => 'BNF']))
      ->setDescription(t('The BNF state of the entity, defining if it was imported, exported, or neither.', [], ['context' => 'BNF']))
      ->setSetting('enum_class', BnfStateEnum::class)
      ->setDefaultValue(BnfStateEnum::None);

    $fields['bnf_source_changed'] = BaseFieldDefinition::create('string')
      ->setName('bnf_source_changed')
      ->setLabel(t('BNF source updated', [], ['context' => 'BNF']))
      ->setDescription(t('The datetime of when this content was last updated at the source.', [], ['context' => 'BNF']));

    $fields['bnf_source_name'] = BaseFieldDefinition::create('string')
      ->setName('bnf_source_name')
      ->setLabel(t('BNF Source', [], ['context' => 'BNF']))
      ->setDescription(t('The site name of the source of this content', [], ['context' => 'BNF']));
  }

  return $fields;
}

/**
 * Implements theme_preprocess_html().
 *
 * Adding the node UUID as a metatag, that we can use when the user submits
 * a URL to the BNF import form.
 */
function bnf_preprocess_html(array &$variables): void {
  $route = \Drupal::routeMatch();
  $node = $route->getParameter('node');

  if ($route->getRouteName() !== 'entity.node.canonical' || !($node instanceof NodeInterface)) {
    return;
  }

  $uuid_metatag = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'uuid',
      'content' => $node->uuid(),
    ],
  ];

  $variables['page']['#attached']['html_head'][] = [$uuid_metatag, 'node-uuid'];
}
