<?php
/**
 * DplOpeningHoursLegacyListGET200ResponseInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  DanskernesDigitaleBibliotek\CMS\Api\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * DPL CMS - REST API
 *
 * The REST API provide by the core REST module.
 *
 * The version of the OpenAPI document: Versioning not supported
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace DanskernesDigitaleBibliotek\CMS\Api\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DplOpeningHoursLegacyListGET200ResponseInner model.
 *
 * @package DanskernesDigitaleBibliotek\CMS\Api\Model
 * @author  OpenAPI Generator team
 */

class DplOpeningHoursLegacyListGET200ResponseInner 
{
        /**
     * The node Id of the branch the opening hours instance belongs to.
     *
     * @var int|null
     * @SerializedName("nid")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $nid = null;

    /**
     * The (t)id of the opening hours category.
     *
     * @var int|null
     * @SerializedName("category_tid")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $categoryTid = null;

    /**
     * The date which the opening hours applies to. In ISO 8601 format.
     *
     * @var \DateTime|null
     * @SerializedName("date")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    protected ?\DateTime $date = null;

    /**
     * When the opening hours start. In format HH:MM
     *
     * @var string|null
     * @SerializedName("start_time")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $startTime = null;

    /**
     * When the opening hours end. In format HH:MM
     *
     * @var string|null
     * @SerializedName("end_time")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $endTime = null;

    /**
     * Additional notice regarding the opening hours.
     *
     * @var string|null
     * @SerializedName("notice")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $notice = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->nid = array_key_exists('nid', $data) ? $data['nid'] : $this->nid;
            $this->categoryTid = array_key_exists('categoryTid', $data) ? $data['categoryTid'] : $this->categoryTid;
            $this->date = array_key_exists('date', $data) ? $data['date'] : $this->date;
            $this->startTime = array_key_exists('startTime', $data) ? $data['startTime'] : $this->startTime;
            $this->endTime = array_key_exists('endTime', $data) ? $data['endTime'] : $this->endTime;
            $this->notice = array_key_exists('notice', $data) ? $data['notice'] : $this->notice;
        }
    }

    /**
     * Gets nid.
     *
     * @return int|null
     */
    public function getNid(): ?int
    {
        return $this->nid;
    }



    /**
     * Sets nid.
     *
     * @param int|null $nid  The node Id of the branch the opening hours instance belongs to.
     *
     * @return $this
     */
    public function setNid(?int $nid): self
    {
        $this->nid = $nid;

        return $this;
    }

    /**
     * Gets categoryTid.
     *
     * @return int|null
     */
    public function getCategoryTid(): ?int
    {
        return $this->categoryTid;
    }



    /**
     * Sets categoryTid.
     *
     * @param int|null $categoryTid  The (t)id of the opening hours category.
     *
     * @return $this
     */
    public function setCategoryTid(?int $categoryTid): self
    {
        $this->categoryTid = $categoryTid;

        return $this;
    }

    /**
     * Gets date.
     *
     * @return \DateTime|null
     */
    public function getDate(): ?\DateTime
    {
        return $this->date;
    }



    /**
     * Sets date.
     *
     * @param \DateTime|null $date  The date which the opening hours applies to. In ISO 8601 format.
     *
     * @return $this
     */
    public function setDate(?\DateTime $date): self
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Gets startTime.
     *
     * @return string|null
     */
    public function getStartTime(): ?string
    {
        return $this->startTime;
    }



    /**
     * Sets startTime.
     *
     * @param string|null $startTime  When the opening hours start. In format HH:MM
     *
     * @return $this
     */
    public function setStartTime(?string $startTime): self
    {
        $this->startTime = $startTime;

        return $this;
    }

    /**
     * Gets endTime.
     *
     * @return string|null
     */
    public function getEndTime(): ?string
    {
        return $this->endTime;
    }



    /**
     * Sets endTime.
     *
     * @param string|null $endTime  When the opening hours end. In format HH:MM
     *
     * @return $this
     */
    public function setEndTime(?string $endTime): self
    {
        $this->endTime = $endTime;

        return $this;
    }

    /**
     * Gets notice.
     *
     * @return string|null
     */
    public function getNotice(): ?string
    {
        return $this->notice;
    }



    /**
     * Sets notice.
     *
     * @param string|null $notice  Additional notice regarding the opening hours.
     *
     * @return $this
     */
    public function setNotice(?string $notice): self
    {
        $this->notice = $notice;

        return $this;
    }
}


