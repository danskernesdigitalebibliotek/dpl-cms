<?php
/**
 * EventsGET200ResponseInnerTicketCategoriesInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  DanskernesDigitaleBibliotek\CMS\Api\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * DPL CMS - REST API
 *
 * The REST API provide by the core REST module.
 *
 * The version of the OpenAPI document: Versioning not supported
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace DanskernesDigitaleBibliotek\CMS\Api\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EventsGET200ResponseInnerTicketCategoriesInner model.
 *
 * @package DanskernesDigitaleBibliotek\CMS\Api\Model
 * @author  OpenAPI Generator team
 */

class EventsGET200ResponseInnerTicketCategoriesInner 
{
        /**
     * The name of the ticket category.
     *
     * @var string|null
     * @SerializedName("title")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $title = null;

    /**
     * @var EventsGET200ResponseInnerTicketCategoriesInnerPrice|null
     * @SerializedName("price")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("DanskernesDigitaleBibliotek\CMS\Api\Model\EventsGET200ResponseInnerTicketCategoriesInnerPrice")
     * @Type("DanskernesDigitaleBibliotek\CMS\Api\Model\EventsGET200ResponseInnerTicketCategoriesInnerPrice")
     */
    protected ?EventsGET200ResponseInnerTicketCategoriesInnerPrice $price = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
        }
    }

    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }



    /**
     * Sets title.
     *
     * @param string|null $title  The name of the ticket category.
     *
     * @return $this
     */
    public function setTitle(?string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Gets price.
     *
     * @return EventsGET200ResponseInnerTicketCategoriesInnerPrice|null
     */
    public function getPrice(): ?EventsGET200ResponseInnerTicketCategoriesInnerPrice
    {
        return $this->price;
    }



    /**
     * Sets price.
     *
     * @param EventsGET200ResponseInnerTicketCategoriesInnerPrice|null $price
     *
     * @return $this
     */
    public function setPrice(?EventsGET200ResponseInnerTicketCategoriesInnerPrice $price): self
    {
        $this->price = $price;

        return $this;
    }
}


