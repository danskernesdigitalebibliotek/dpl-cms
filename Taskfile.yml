# This is a go-task file for various developer tasks
# e.g. building docker images and setting up local development.
# You can read about the Task files here: https://taskfile.dev.
version: '3'

dotenv: [".task.env"]

vars:
  # Docker file registry.
  REGISTRY: '{{.REGISTRY | default "ghcr.io"}}'
  # Github organization.
  ORG: '{{.ORG | default "danskernesdigitalebibliotek"}}'
  # Get total amout of commits on the main branch. Used as build number.
  COMMIT_COUNT:
    sh: git rev-list --count origin/main
  # The version number we want to tag the source build with.
  # It can be specified by adding SOURCE_VERSION=XX when running command.
  # Otherwise it will default to the COMMIT_COUNT variable.
  SOURCE_VERSION: '{{.SOURCE_VERSION | default .COMMIT_COUNT }}'
  # Using the name of this project as a namespace of the docker image.
  DOCKER_IMAGE_NAMESPACE: '{{.DOCKER_IMAGE_NAMESPACE | default "dpl-cms"}}'
  # Constructing docker image name.
  DOCKER_IMAGE_PREFIX: "{{ .REGISTRY }}/{{ .ORG }}/{{ .DOCKER_IMAGE_NAMESPACE }}"
  # Constructing docker image name.
  IMAGE_SOURCE: "{{ .DOCKER_IMAGE_PREFIX }}-source:{{ .SOURCE_VERSION }}"
  # Where is the docker file(s) we use for our builds residing?
  DOCKER_IMAGE_DIR: "docker"

tasks:
  ghcr:login:
    summary: Login into Github Container Registry
    cmds:
      - echo {{ .CR_PAT }} | docker login {{ .REGISTRY }} -u username-not-used --password-stdin
    preconditions:
      - sh: "[ ! -z {{.CR_PAT}} ]"
        msg: "Env variable CR_PAT is not set or empty."

  dev:composer:
    summary: Performs composer command inside container. Expects parameter.
    cmds:
      - docker-compose run cli sh -c "COMPOSER_MEMORY_LIMIT=-1 composer {{.CLI_ARGS}}"

  dev:prepare:
    summary: Prepare local development setup
    cmds:
      - cp -n .env.example .env || true

  dev:composer:install:
    summary: Install drupal.
    cmds:
      - task dev:composer -- install

  dev:run:
    summary: Run docker compose
    cmds:
      - docker-compose up -d

  source:build:
    summary: Build core source image.
    cmds:
      - docker build -f {{ .DOCKER_IMAGE_DIR }}/source.dockerfile --tag {{ .IMAGE_SOURCE }} .

  source:push:
    summary: Push core source image to container registry.
    deps: [ghcr:login]
    cmds:
      - docker push {{ .IMAGE_SOURCE }}

  source:deploy:
    desc: Build and push core source docker image.
    cmds:
      - task: source:build
      - task: source:push

  dev:setup:
    desc: Create local development setup
    cmds:
      - task: dev:prepare
      - task: dev:composer:install
      - task: dev:run
